{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workflows_Get_dex_incidents_name": {
      "defaultValue": "Get_dex_incidents",
      "type": "String"
    },
    "connections_GraphSecurity_externalid": {
      "defaultValue": "/subscriptions/d1d8779d-38d7-4f06-91db-9cbc8de0176f/resourceGroups/DefenderExperts/providers/Microsoft.Web/connections/GraphSecurity",
      "type": "String"
    },
    "customApis_GraphSecurity_externalid": {
      "defaultValue": "/subscriptions/d1d8779d-38d7-4f06-91db-9cbc8de0176f/resourceGroups/DefenderExperts/providers/Microsoft.Web/customApis/GraphSecurity",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('workflows_Get_dex_incidents_name')]",
      "location": "eastus2",
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 12,
                "timeZone": "UTC"
              },
              "evaluatedRecurrence": {
                "frequency": "Hour",
                "interval": 12,
                "timeZone": "UTC"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "Initialize_days": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "days",
                    "type": "integer",
                    "value": -30
                  }
                ]
              },
              "description": "Days to look back. Must be negative. Ex: \"-30\""
            },
            "Initialize_skip": {
              "runAfter": {
                "Initialize_days": ["Succeeded"]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "skip",
                    "type": "integer",
                    "value": 0
                  }
                ]
              }
            },
            "Until_no_more_incidents": {
              "actions": {
                "List_incidents": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "headers": {
                      "Prefer": "include-unknown-enum-members"
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['GraphSecurity']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/beta/security/incidents",
                    "queries": {
                      "$filter": "createdDateTime gt @{addDays(utcNow(), variables('days'))}",
                      "$skip": "@variables('skip')"
                    }
                  }
                },
                "Filter_DEX_incidents": {
                  "runAfter": {
                    "List_incidents": ["Succeeded"]
                  },
                  "type": "Query",
                  "inputs": {
                    "from": "@body('List_incidents')?['value']",
                    "where": "@contains(item()?['systemTags'], 'dex_tag')"
                  }
                },
                "If_more_incidents": {
                  "actions": {
                    "Compose_skip": {
                      "runAfter": {},
                      "type": "Compose",
                      "inputs": "@split(body('List_incidents')?['@odata.nextLink'], 'skip=')[1]"
                    },
                    "Set_skip": {
                      "runAfter": {
                        "Compose_skip": ["Succeeded"]
                      },
                      "type": "SetVariable",
                      "inputs": {
                        "name": "skip",
                        "value": "@int(outputs('Compose_skip'))"
                      }
                    }
                  },
                  "runAfter": {
                    "Filter_DEX_incidents": ["Succeeded"]
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": ["@empty(body('List_incidents')?['@odata.nextLink'])", "@true"]
                        }
                      }
                    ]
                  },
                  "type": "If"
                },
                "Compose": {
                  "runAfter": {
                    "If_more_incidents": ["Succeeded"]
                  },
                  "type": "Compose",
                  "inputs": "DEX incidents: @{length(body('Filter_DEX_incidents'))}"
                }
              },
              "runAfter": {
                "Initialize_skip": ["Succeeded"]
              },
              "expression": "@equals(empty(body('List_incidents')?['@odata.nextLink']), true)",
              "limit": {
                "count": 60,
                "timeout": "PT1H"
              },
              "type": "Until"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "GraphSecurity": {
                "connectionId": "[parameters('connections_GraphSecurity_externalid')]",
                "connectionName": "GraphSecurity",
                "id": "[parameters('customApis_GraphSecurity_externalid')]"
              }
            }
          }
        }
      }
    }
  ]
}
